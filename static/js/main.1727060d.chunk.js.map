{"version":3,"sources":["components/Button.js","components/Header.js","components/Heading.js","components/Post.js","components/TextInput.js","App.js","reportWebVitals.js","index.js"],"names":["Button","props","color","size","onClick","className","children","Header","Component","Heading","type","Post","this","title","content","onFavourite","isFavourite","checked","onChange","TextInput","name","placeholder","App","onViewClick","a","subreddit","state","axios","get","data","posts","i","push","setState","prevState","console","log","onViewFavouritesClick","favourites","JSON","parse","localStorage","getItem","map","fav","sub","post","e","target","value","onFavouriteToggle","postData","id","filter","p","setItem","stringify","accessToken","process","headers","auth","username","password","then","access_token","defaults","common","catch","error","find","selftext","src","url","thumbnail","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1727060d.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Button = (props) => {\n  const color = props.color || \"primary\";\n  const size = props.size || \"inline\";\n\n  return (\n    <button\n      onClick={props.onClick}\n      className={`btn btn--${color} btn--${size}`}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { Component } from \"react\";\n\nclass Header extends Component {\n  render() {\n    return (\n      <header className=\"header\">\n        <h1>Redeye</h1>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React from \"react\";\n\nconst Heading = (props) => {\n  const type = props.type || \"normal\";\n\n  return <div className={`heading--${type}`}>{props.children}</div>;\n};\n\nexport default Heading;\n","import React, { Component } from \"react\";\nimport Heading from \"./Heading\";\n\nclass Post extends Component {\n  render() {\n    const { title, content, onFavourite, isFavourite } = this.props;\n\n    return (\n      <div className=\"post\">\n        <label className=\"favourite\">\n          <input\n            type=\"checkbox\"\n            checked={isFavourite}\n            onChange={onFavourite}\n          ></input>\n          Favourite\n        </label>\n        <div className=\"title\">{title}</div>\n        <div className=\"content\">{content}</div>\n      </div>\n    );\n  }\n}\n\nexport default Post;\n","import React, { Component } from \"react\";\n\nclass TextInput extends Component {\n  render() {\n    const { type, name, placeholder, onChange } = this.props;\n\n    return (\n      <div className=\"input-wrapper\">\n        <input\n          className=\"text-input\"\n          type={type}\n          name={name}\n          onChange={onChange}\n          placeholder={placeholder}\n        ></input>\n      </div>\n    );\n  }\n}\n\nexport default TextInput;\n","import React, { Component } from \"react\";\nimport Button from \"./components/Button\";\nimport Header from \"./components/Header\";\nimport Heading from \"./components/Heading\";\nimport Post from \"./components/Post\";\nimport TextInput from \"./components/TextInput\";\nimport axios from \"axios\";\nimport \"./stylesheet.scss\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      accessToken: null,\n      posts: [],\n      favourites: [],\n    };\n  }\n\n  componentDidMount() {\n    if (!localStorage.getItem(\"favourites\")) {\n      localStorage.setItem(\"favourites\", JSON.stringify([]));\n    }\n\n    this.setState((prevState) => ({\n      ...prevState,\n      favourites: JSON.parse(localStorage.getItem(\"favourites\")),\n    }));\n\n    // Get access token\n    const { data } = axios\n      .post(\n        \"https://www.reddit.com/api/v1/access_token\",\n        `grant_type=https://oauth.reddit.com/grants/installed_client&device_id=${process.env.REACT_APP_DEVICE_ID}`,\n        {\n          headers: {\n            \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\",\n          },\n          auth: {\n            username: process.env.REACT_APP_REDDIT_ID,\n            password: \"\",\n          },\n        }\n      )\n      .then((data) => {\n        const { access_token } = data.data;\n\n        axios.defaults.headers.common[\n          \"Authorization\"\n        ] = `Bearer ${access_token}`;\n\n        this.setState({\n          accessToken: access_token,\n        });\n      })\n      .catch(() => {\n        this.setState({\n          error: \"Could not get access token for reddit API\",\n        });\n      });\n  }\n\n  onViewClick = async () => {\n    const { subreddit } = this.state;\n\n    try {\n      const { data } = await axios.get(\n        `https://oauth.reddit.com/r/${subreddit}/hot/.json?count=10`\n      );\n\n      const posts = [];\n\n      for (let i = 0; i < 10; i++) {\n        posts.push(data.data.children[i]);\n      }\n\n      this.setState((prevState) => ({\n        ...prevState,\n        posts: posts,\n      }));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  onViewFavouritesClick = async () => {\n    const favourites = JSON.parse(localStorage.getItem(\"favourites\"));\n\n    this.setState((prevState) => ({\n      ...prevState,\n      posts: [],\n    }));\n\n    await favourites.map(async (fav) => {\n      const { data } = await axios.get(\n        `https://oauth.reddit.com/r/${fav.sub}/comments/${fav.post}.json`\n      );\n\n      const posts = this.state.posts;\n      posts.push(data[0].data.children[0]);\n\n      this.setState((prevState) => ({\n        ...prevState,\n        posts: posts,\n      }));\n    });\n  };\n\n  onChange = (e) => {\n    this.setState((prevState) => ({\n      ...prevState,\n      [e.target.name]: e.target.value,\n    }));\n  };\n\n  onFavouriteToggle = (post) => (e) => {\n    let favourites = JSON.parse(localStorage.getItem(\"favourites\")) || [];\n    const postData = {\n      sub: post.subreddit,\n      post: post.id,\n    };\n\n    console.log(postData);\n\n    if (e.target.checked) {\n      favourites.push(postData);\n    } else {\n      favourites = favourites.filter((p) => p.post !== postData.post);\n    }\n\n    localStorage.setItem(\"favourites\", JSON.stringify(favourites));\n\n    this.setState((prevState) => ({\n      ...prevState,\n      favourites,\n    }));\n\n    console.log(localStorage);\n  };\n\n  render() {\n    const { accessToken, posts, favourites } = this.state;\n\n    console.log(\"POSTS\", posts);\n\n    console.log(\"favourites\", favourites);\n\n    if (!accessToken) {\n      return <h1>Loading...</h1>;\n    }\n\n    return (\n      <div className=\"App\">\n        <Header />\n        <main className=\"wrapper\">\n          <section className=\"content\" id=\"subreddit-input\">\n            <Heading type=\"subtitle\">Enter a subreddit name</Heading>\n\n            <TextInput\n              type=\"text\"\n              name=\"subreddit\"\n              onChange={this.onChange}\n              placeholder=\"Subreddit name\"\n            />\n\n            <Button onClick={this.onViewClick} size=\"normal\" color=\"primary\">\n              View posts\n            </Button>\n\n            <Button\n              onClick={this.onViewFavouritesClick}\n              size=\"normal\"\n              color=\"primary\"\n            >\n              View favourites\n            </Button>\n          </section>\n\n          <section className=\"content\" id=\"subreddit-posts\">\n            {posts.map((post) => {\n              return (\n                <Post\n                  key={post.data.id}\n                  title={post.data.title}\n                  onFavourite={this.onFavouriteToggle(post.data)}\n                  isFavourite={\n                    !!favourites.find((p) => p.post === post.data.id)\n                  }\n                  content={\n                    post.data.selftext || <img src={post.data.url}></img> || (\n                      <img src={post.data.thumbnail}></img>\n                    )\n                  }\n                ></Post>\n              );\n            })}\n          </section>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./index.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}